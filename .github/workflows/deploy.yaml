name: Fly Deploy

on:
  push:
    branches: [ "main" ]

concurrency:
  group: fly-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      FLY_APP: audioconnector-realtime-shim
      FLY_ORG: personal # <-- change this to your Fly.io org slug if not "personal"
    steps:
      - uses: actions/checkout@v4

      - uses: superfly/flyctl-actions/setup-flyctl@v1

      - name: Ensure Fly app exists
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          set -e
          if ! flyctl apps list --json | jq -e ".[] | select(.Name==\"$FLY_APP\")" > /dev/null; then
            echo "Creating app $FLY_APP in org $FLY_ORG..."
            flyctl apps create "$FLY_APP" --org "$FLY_ORG"
          else
            echo "App $FLY_APP already exists."
          fi

      - name: Set Fly secrets
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          API_KEY: ${{ secrets.API_KEY }}
          API_SECRET: ${{ secrets.API_SECRET }}
        run: |
          flyctl secrets set OPENAI_API_KEY="$OPENAI_API_KEY" --stage --app "$FLY_APP"
          flyctl secrets set API_KEY="$API_KEY" --stage --app "$FLY_APP"
          flyctl secrets set API_SECRET="$API_SECRET" --stage --app "$FLY_APP"

      - name: Deploy
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl deploy --remote-only
